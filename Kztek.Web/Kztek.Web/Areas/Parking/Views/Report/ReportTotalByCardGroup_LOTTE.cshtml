@using Kztek.Model.CustomModel
@using Kztek.Web.Core.Extensions
@using Kztek.Web.Core.Helpers
@using Kztek.Web.Attributes
@using Kztek.Web.Core.Functions

@model List<Kztek.Model.Models.TotalByCardGroup>

@{
    /**/

    ViewBag.Title = "ReportTotalByCardGroup_LOTTE";

    var vehicleGroups = (IEnumerable<Kztek.Model.Models.tblVehicleGroup>)ViewBag.VehicleGroup;

    var user = Kztek.Web.Core.Functions.GetCurrentUser.GetUser();

    var Dictionary = FunctionHelper.GetLocalizeDictionary("report", "ReportTotalMoneyByCardGroup");
    var DictionarySearch = FunctionHelper.GetLocalizeDictionary("report", "reportSearch");
    var DictionaryAction = FunctionHelper.GetLocalizeDictionary("Home", "Action");

    var DictionaryLT = FunctionHelper.GetLocalizeDictionary("report", "ReportTotalByCardGroup_LOTTE");
}

<div class="page-header">
    <h1>
        @DictionaryLT["title"] 
    </h1>
</div>

<div class="row">
    @using (Html.BeginForm("ReportTotalByCardGroup_LOTTE", "Report", FormMethod.Get, new { id = "frmReportTotalByCardGroup_LOTTE" }))
    {
        @Html.Hidden("chkExport", "0")
        @*@Html.Hidden("column", column)
            @Html.Hidden("desc", isDescSort)*@

        <div class="col-md-3 col-xs-12 divboxmd">
            @DictionarySearch["fromDate"]:
            <div class="input-group">
                @Html.TextBox("fromdate", (string)ViewBag.fromdateValue, new { @class = "form-control datepicker" })
                <span class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </span>
            </div>
        </div>
        <div class="col-md-3 col-xs-12 divboxmd">
            @DictionarySearch["toDate"]:
            <div class="input-group">
                @Html.TextBox("todate", (string)ViewBag.todateValue, new { @class = "form-control datepicker" })
                <span class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </span>
            </div>
        </div>
        <div class="col-md-2 col-xs-12 divboxmd">
            <div class="control-label">
                @DictionarySearch["cardGroup"]:
            </div>
            <div>
                @Html.Action("DroplistMultiSelectTemplate1", "CommonUse", new { _dt = ViewBag.CardGroupDT, itemValue = "ItemValue", itemText = "ItemText", selectedValues = ViewBag.CardGroupId, Modelname = "ddlcardgroup", labelName = "-- Lựa chọn --" })
                @Html.Hidden("cardgroup")
            </div>
        </div>
        <div class="col-md-12 col-xs-12 divboxmd line-height-450">
            @Html.Action("Actions", "Home", new { ActionName = "Search", ControllerName = "ReportTotalByCardGroup_LOTTE" })

            @Html.Action("Actions", "Home", new { ActionName = "Export", ControllerName = "ReportTotalByCardGroup_LOTTE" })

            @Html.Action("Actions", "Home", new { ActionName = "Index", ControllerName = "ReportTotalByCardGroup_LOTTE" })

        </div>
    }
</div>

<div class="hr hr-18 dotted hr-24"></div>

<div class="row">
    <div class="col-xs-6">
        <table class="table  table-bordered table-hover">
            <thead>
                <tr class="headerSort">
                    <th class="center">@Dictionary["stt"]</th>
                    <th class="text-left" idata="CardGroup">@Dictionary["cardGroup"] <i class=""></i></th>
                    <th class="text-right hidden-480">@Dictionary["quantity"]</th>
                    <th class="text-right hidden-480">@Dictionary["amount"]</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Any())
                {
                    int count = 0;

                    foreach (var item in vehicleGroups)
                    {
                        var cardGroups = Model.Where(n => n.VehicleGroupID == item.VehicleGroupID.ToString());

                        var totalQuan = 0;

                        decimal totalMoneys = 0;

                        if (cardGroups != null && cardGroups.Count() > 0)
                        {

                            foreach (var itemC in cardGroups)
                            {
                                count++;
                                totalQuan += itemC.Quantity;

                                totalMoneys += itemC.Total;
                                <tr>
                                    <td class="text-center">
                                        @count
                                    </td>
                                    <td>
                                       @itemC.CardGroupID
                                    </td>
                                    <td class="text-right">
                                        @itemC.Quantity
                                    </td>
                                    <td class="text-right">
                                        @if (itemC.Total > 0)
                                        {
                                            <span>@itemC.Total.ToString("###,###")</span>
                                        }
                                        else
                                        {
                                            <span>0</span>
                                        }
                                    </td>
                                </tr>
                            }

                            <tr style="font-weight:bold">
                                <td class="text-center">
                                    
                                </td>
                                <td>
                                  Tổng
                                </td>
                                <td class="text-right">
                                    @totalQuan
                                </td>
                                <td class="text-right">
                                    @if (totalMoneys > 0)
                                    {
                                        <span>@totalMoneys.ToString("###,###")</span>
                                    }
                                    else
                                    {
                                        <span>0</span>
                                    }
                                </td>
                            </tr>
                        }
                    }


                }
            </tbody>
        </table>
    </div>
   
</div>

@section scripts{
    <script>
        
        $(document).ready(function () {
            //Export excel
            $('button[name=btnExport]').click(function () {
                $('#chkExport').val('1');
                $('#frmReportTotalByCardGroup_LOTTE').submit();
            });

            $('button[name=btnFilter]').click(function () {
                $('#chkExport').val('0'); // ko xuat xxcel
                $('#frmReportTotalByCardGroup_LOTTE').submit();
            });

            $('#btnPrintFile').click(function () {
                var _frdate = $('input[name=fromdate]').val();
                var _todate = $('input[name=todate]').val();
                var _cardgroup = $('#cardgroup').val();
                var url = '/Parking/Report/PrintReportTotalByCardGroup_LOTTE?fromdate=' + _frdate + '&todate=' + _todate + '&cardgroup=' + _cardgroup;
                window.open(url, '_blank');
                //$('#chkExport').val('2');
                //$('#frmReportTotalByCardGroup_LOTTE').submit();
            });

            $('#ddlcardgroup').change(function () {
                var str = '';
                var cmd = $(this);
                cmd.parent().find('ul.multiselect-container li.active').each(function () {
                    var _cmd = $(this);
                    str += _cmd.find('input[type=checkbox]').val() + ',';
                });
                $('#cardgroup').val(str);
            });
          

        });
    </script>
}